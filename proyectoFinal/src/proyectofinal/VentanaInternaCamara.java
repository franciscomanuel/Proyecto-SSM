/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.media.Buffer;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;

/**
 * Crea una clase Ventana interna camara.
 * Hereda de la clase javax.swing.JInternalFrame.
 * @author Francisco Manuel Sánchez Ramos
 */
public class VentanaInternaCamara extends javax.swing.JInternalFrame {

    /**
     * Variable de tipo Player.
     */  
    Player player = null;
    
    /**
     * Crea un objeto VentanaInternaCamara
     */
    public VentanaInternaCamara() {
        initComponents();
        this.setSize(300, 300);
        
        try{
            String dName="vfw:Microsoft WDM Image Capture (Win32):0";
            MediaLocator ml = new MediaLocator(dName);
            
            player = Manager.createRealizedPlayer(ml);
            Component areaVisual = player.getVisualComponent();
            if(areaVisual!=null) contenedor.add(areaVisual, java.awt.BorderLayout.CENTER);
            Component panelControl = player.getControlPanelComponent();
            if(panelControl!=null) contenedor.add(panelControl, java.awt.BorderLayout.SOUTH);
        }catch(Exception e) {
            System.err.println("Error"+e);
        }
    }
    
    /**
     * Método para captar una imagen desde la webcam.
     * @return Devuelve la imagen capturada.
     */
    public BufferedImage getFrame(){
        FrameGrabbingControl fgc = null;
        String claseCtr = "javax.media.control.FrameGrabbingControl";
        fgc = (FrameGrabbingControl)player.getControl(claseCtr);
        Buffer bufferFrame = fgc.grabFrame();
        BufferToImage bti;
        bti=new BufferToImage((VideoFormat)bufferFrame.getFormat());
        Image img = bti.createImage(bufferFrame);
        return (BufferedImage)img;
    }
    
    /**
     * Método para iniciar la webcam.
     */
    public void play(){       
        if(player!=null){
            try{
                player.start();
            }catch(Exception e) {}
        }else{
            System.out.println("No se enciende la webcam");
        }
            
    }
        
    /**
     * Metodo para parar la webcam.
     */
    public void stop(){
        if(player!=null){
            try{
                player.stop();
                player.close();
            }catch(Exception e) {}
        }else{
            System.out.println("No se para la webcam");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedor = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        contenedor.setLayout(new java.awt.BorderLayout());
        getContentPane().add(contenedor, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        stop();
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenedor;
    // End of variables declaration//GEN-END:variables
}
